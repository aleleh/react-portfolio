{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/titan/OneDrive/Documents/GitHub/Sundsgarden/react-portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/titan/OneDrive/Documents/GitHub/Sundsgarden/react-portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"C:/Users/titan/OneDrive/Documents/GitHub/Sundsgarden/react-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/titan/OneDrive/Documents/GitHub/Sundsgarden/react-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/titan/OneDrive/Documents/GitHub/Sundsgarden/react-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// imports useState hook and XCircle icon from react icons\nimport axios from'axios';import React,{useState}from'react';import{BiXCircle}from\"react-icons/bi\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ContactPage(){// States\n// formData keeps track of the current values of the inpit fields in the form.\n// It is initialized as an object with 'name', 'email' and 'mesasge' properties all set to empty strings. \nvar _useState=useState({name:'',email:'',message:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];// submittedData stores the data submitted through the form and is inittially set to 'null'.\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),submittedData=_useState4[0],setSubmittedData=_useState4[1];// isModalOpen This state determines if booking call modal is open or closed and is initally set to 'false'.\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isModalOpen=_useState6[0],setIsModalOpen=_useState6[1];// Handle input changes.\n// When user makes changes to any of the fields\n// this function is called and updates the formData state to include new value\n// while keeping the other fields unchanged. \nvar handleChange=function handleChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};// Handle form submission\n// e.preventDefault() prevents the default behaviour of the form such as reloading the page\n// setSubmittedData(formData) stores the current formData so it can be displayed\n// laste line is just resetting the formData to it's initial values\nvar handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;_context.next=4;return axios.post('http://localhost:3000/sendmail',formData);case 4:response=_context.sent;if(response.status===200){setSubmittedData(formData);setFormData({name:'',email:'',message:''});}else{// Handle error, e.g. show a notification or message\nconsole.error(\"Error sending message\");}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);// Handle error, e.g. show a notification or message\nconsole.error(\"Error sending message: \",_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[1,8]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();// Toggle modal open/closed state or 'true' or 'false'\n// Calls setIsModalOpen function then passes argument '!IsModalOpen' to  'setIsModalOpen'\n// The '!' (not operator) inverts the current boolean value of 'isModalOpen'\n// making it possible to toggle back and forth everytime toggleModal is called\nvar toggleModal=function toggleModal(){setIsModalOpen(!isModalOpen);};return/*#__PURE__*/_jsxs(\"div\",{className:\"ContactPage-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ContactPage-form-container animate__animated animate__fadeIn\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Send a Message\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"message\",children:\"Message:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"message\",name:\"message\",value:formData.message,onChange:handleChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]}),submittedData&&/*#__PURE__*/_jsxs(\"div\",{className:\"submitted-data\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Message Sent!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Name: \",submittedData.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",submittedData.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Message: \",submittedData.message]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ContactPage-modal-container animate__animated animate__fadeIn\",children:/*#__PURE__*/_jsx(\"button\",{className:\"book-a-call-btn\",onClick:toggleModal,children:\"Book a Call\"})}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"Modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"Modal-content\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"Modal-close\",onClick:toggleModal,children:/*#__PURE__*/_jsx(BiXCircle,{})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Book a Call\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Here's some information about booking a call.\"})]})})]});}export default ContactPage;","map":{"version":3,"names":["axios","React","useState","BiXCircle","jsx","_jsx","jsxs","_jsxs","ContactPage","_useState","name","email","message","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","submittedData","setSubmittedData","_useState5","_useState6","isModalOpen","setIsModalOpen","handleChange","e","_objectSpread","_defineProperty","target","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","preventDefault","post","sent","status","console","error","t0","stop","_x","apply","arguments","toggleModal","className","children","onSubmit","htmlFor","type","id","onChange","onClick"],"sources":["C:/Users/titan/OneDrive/Documents/GitHub/Sundsgarden/react-portfolio/src/components/ContactPage.js"],"sourcesContent":["// imports useState hook and XCircle icon from react icons\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { BiXCircle } from \"react-icons/bi\";\r\n\r\nfunction ContactPage() {\r\n  \r\n  // States\r\n  // formData keeps track of the current values of the inpit fields in the form.\r\n  // It is initialized as an object with 'name', 'email' and 'mesasge' properties all set to empty strings. \r\n  const [formData, setFormData] = useState({ name: '', email: '', message: '' });\r\n  // submittedData stores the data submitted through the form and is inittially set to 'null'.\r\n  const [submittedData, setSubmittedData] = useState(null);\r\n  // isModalOpen This state determines if booking call modal is open or closed and is initally set to 'false'.\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Handle input changes.\r\n  // When user makes changes to any of the fields\r\n  // this function is called and updates the formData state to include new value\r\n  // while keeping the other fields unchanged. \r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission\r\n  // e.preventDefault() prevents the default behaviour of the form such as reloading the page\r\n  // setSubmittedData(formData) stores the current formData so it can be displayed\r\n  // laste line is just resetting the formData to it's initial values\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      // Make a POST request to your server with form data\r\n      const response = await axios.post('http://localhost:3000/sendmail', formData);\r\n  \r\n      if(response.status === 200){\r\n        setSubmittedData(formData);\r\n        setFormData({ name: '', email: '', message: '' });\r\n      } else {\r\n        // Handle error, e.g. show a notification or message\r\n        console.error(\"Error sending message\");\r\n      }\r\n    } catch (error) {\r\n      // Handle error, e.g. show a notification or message\r\n      console.error(\"Error sending message: \", error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Toggle modal open/closed state or 'true' or 'false'\r\n  // Calls setIsModalOpen function then passes argument '!IsModalOpen' to  'setIsModalOpen'\r\n  // The '!' (not operator) inverts the current boolean value of 'isModalOpen'\r\n  // making it possible to toggle back and forth everytime toggleModal is called\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ContactPage-main\">\r\n      <div className=\"ContactPage-form-container animate__animated animate__fadeIn\">\r\n        <div className=\"form-card\">\r\n          <h2>Send a Message</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}/>\r\n            <br/>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}/>\r\n            <br/>\r\n            <label htmlFor=\"message\">Message:</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}>\r\n              </textarea>\r\n            <br/>\r\n            <button type=\"submit\">Send</button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* if submittedData is true the code after will run */} \r\n        {submittedData && (\r\n          <div className=\"submitted-data\">\r\n            <p>Message Sent!</p>\r\n            <p>Name: {submittedData.name}</p>\r\n            <p>Email: {submittedData.email}</p>\r\n            <p>Message: {submittedData.message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n        \r\n      {/* toggle button fir modal */}\r\n      <div className=\"ContactPage-modal-container animate__animated animate__fadeIn\">\r\n        <button className='book-a-call-btn' onClick={toggleModal}>Book a Call</button>\r\n      </div>\r\n      \r\n      {/* if isModalOpen is true the code after will run */} \r\n      {isModalOpen && (\r\n        <div className=\"Modal\">\r\n          <div className=\"Modal-content\">\r\n            <button className=\"Modal-close\" onClick={toggleModal}>\r\n              <BiXCircle />\r\n            </button>\r\n            <h2>Book a Call</h2>\r\n            <p>Here's some information about booking a call.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}