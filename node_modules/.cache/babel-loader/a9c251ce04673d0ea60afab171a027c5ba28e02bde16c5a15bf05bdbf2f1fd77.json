{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\titan\\\\OneDrive\\\\Documents\\\\GitHub\\\\Sundsgarden\\\\react-portfolio\\\\src\\\\components\\\\ContactPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BiXCircle } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactPage() {\n  _s();\n  // States\n  // formData keeps track of the current values of the inpit fields in the form.\n  // It is initialized as an object with 'name', 'email' and 'mesasge' properties all set to empty strings. \n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  // submittedData stores the data submitted through the form and is inittially set to 'null'.\n  const [submittedData, setSubmittedData] = useState(null);\n  // isModalOpen This state determines if booking call modal is open or closed and is initally set to 'false'.\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Handle input changes.\n  // When user makes changes to any of the fields\n  // this function is called and updates the formData state to include new value\n  // while keeping the other fields unchanged. \n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  // e.preventDefault() prevents the default behaviour of the form such as reloading the page\n  // setSubmittedData(formData) stores the current formData so it can be displayed\n  // laste line is just resetting the formData to it's initial values\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmittedData(formData);\n    setFormData({\n      name: '',\n      email: '',\n      message: ''\n    });\n  };\n\n  // Toggle modal open/closed state or 'true' or 'false'\n  // Calls setIsModalOpen function then passes argument '!IsModalOpen' to  'setIsModalOpen'\n  // The '!' (not operator) inverts the current boolean value of 'isModalOpen'\n  // making it possible to toggle back and forth everytime toggleModal is called\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactPage-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactPage-form-container animate__animated animate__fadeIn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Send a Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"message\",\n            name: \"message\",\n            value: formData.message,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), submittedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitted-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Message Sent!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", submittedData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", submittedData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", submittedData.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactPage-modal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"book-a-call-btn\",\n        onClick: toggleModal,\n        children: \"Book a Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Modal-close\",\n          onClick: toggleModal,\n          children: /*#__PURE__*/_jsxDEV(BiXCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Book a Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here's some information about booking a call.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactPage, \"TRJYZqghHm87SbVp6VFCHeVEBV4=\");\n_c = ContactPage;\nexport default ContactPage;\nvar _c;\n$RefreshReg$(_c, \"ContactPage\");","map":{"version":3,"names":["React","useState","BiXCircle","jsxDEV","_jsxDEV","ContactPage","_s","formData","setFormData","name","email","message","submittedData","setSubmittedData","isModalOpen","setIsModalOpen","handleChange","e","target","value","handleSubmit","preventDefault","toggleModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/titan/OneDrive/Documents/GitHub/Sundsgarden/react-portfolio/src/components/ContactPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BiXCircle } from \"react-icons/bi\";\r\n\r\nfunction ContactPage() {\r\n  \r\n  // States\r\n  // formData keeps track of the current values of the inpit fields in the form.\r\n  // It is initialized as an object with 'name', 'email' and 'mesasge' properties all set to empty strings. \r\n  const [formData, setFormData] = useState({ name: '', email: '', message: '' });\r\n  // submittedData stores the data submitted through the form and is inittially set to 'null'.\r\n  const [submittedData, setSubmittedData] = useState(null);\r\n  // isModalOpen This state determines if booking call modal is open or closed and is initally set to 'false'.\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Handle input changes.\r\n  // When user makes changes to any of the fields\r\n  // this function is called and updates the formData state to include new value\r\n  // while keeping the other fields unchanged. \r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission\r\n  // e.preventDefault() prevents the default behaviour of the form such as reloading the page\r\n  // setSubmittedData(formData) stores the current formData so it can be displayed\r\n  // laste line is just resetting the formData to it's initial values\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmittedData(formData);\r\n    setFormData({ name: '', email: '', message: '' });\r\n  };\r\n\r\n  // Toggle modal open/closed state or 'true' or 'false'\r\n  // Calls setIsModalOpen function then passes argument '!IsModalOpen' to  'setIsModalOpen'\r\n  // The '!' (not operator) inverts the current boolean value of 'isModalOpen'\r\n  // making it possible to toggle back and forth everytime toggleModal is called\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ContactPage-main\">\r\n      <div className=\"ContactPage-form-container animate__animated animate__fadeIn\">\r\n        <div className='form-card'>\r\n          <h2>Send a Message</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}/>\r\n            <br/>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}/>\r\n            <br/>\r\n            <label htmlFor=\"message\">Message:</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}>\r\n              </textarea>\r\n            <br/>\r\n            <button type=\"submit\">Send</button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* if submittedData is true the code after will run */} \r\n        {submittedData && (\r\n          <div className=\"submitted-data\">\r\n            <p>Message Sent!</p>\r\n            <p>Name: {submittedData.name}</p>\r\n            <p>Email: {submittedData.email}</p>\r\n            <p>Message: {submittedData.message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n        \r\n      {/* toggle button fir modal */}\r\n      <div className=\"ContactPage-modal-container\">\r\n        <button className='book-a-call-btn' onClick={toggleModal}>Book a Call</button>\r\n      </div>\r\n      \r\n      {/* if isModalOpen is true the code after will run */} \r\n      {isModalOpen && (\r\n        <div className=\"Modal\">\r\n          <div className=\"Modal-content\">\r\n            <button className=\"Modal-close\" onClick={toggleModal}>\r\n              <BiXCircle />\r\n            </button>\r\n            <h2>Book a Call</h2>\r\n            <p>Here's some information about booking a call.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}